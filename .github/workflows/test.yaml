# This is a basic workflow to help you get started with Actions

name: Packaging and build workflow

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      foldername:
        required: true
        description: test
        type: choice
        default: 'A'
        options:
          - A
          - B
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: true
        type: string    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: DEV
    permissions:
      contents: read
      packages: write
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Run a multi-line script
        run: |
          pwd
          echo ${{github.event.inputs.foldername}}
      - name: Run a script
        run: echo "${{ github.event.inputs.tags }} ${{ fromJSON('["", "ðŸ¥³"]')[github.event.inputs.print_tags == 'true'] }} ${{ github.event.inputs.foldername }}"
      - name: Run a multi-line script
        run: |
          cd sample
          ls -la
          java --version
          mvn --version
          echo "ENV_NAME is ${{ secrets.ENV_NAME }}"
          echo "ENV_VAR is ${{ vars.ENV_VAR }}"
          echo ${{github.event.inputs.foldername}}
          echo "GITHUB_ACTOR is $GITHUB_ACTOR "
          mvn clean package
          ls -la

      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'   
      - name: publish pakagge
        run: |
          cd sample
          mvn help:effective-settings
        # mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          
