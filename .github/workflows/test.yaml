# This is a basic workflow to help you get started with Actions

name: Packaging and build workflow

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      foldername:
        required: true
        description: test
        type: choice
        default: 'A'
        options:
          - A
          - B
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: true
        type: string    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: DEV
    permissions:
      contents: read
      packages: write
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Run a multi-line script
        run: |
          pwd
          echo ${{github.event.inputs.foldername}}
      - name: Run a script
        run: echo "${{ github.event.inputs.tags }} ${{ fromJSON('["", "ðŸ¥³"]')[github.event.inputs.print_tags == 'true'] }} ${{ github.event.inputs.foldername }}"
      - name: Run a multi-line script
        run: |
          cd sample
          ls -la
          java --version
          mvn --version
          echo "ENV_NAME is ${{ secrets.ENV_NAME }}"
          echo "ENV_VAR is ${{ vars.ENV_VAR }}"
          echo ${{github.event.inputs.foldername}}
          echo "GITHUB_ACTOR is $GITHUB_ACTOR "
          mvn clean package
          ls -la
          cd target
          ls -la
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          tag_name: v1.0.6 # Specify your tag name here
          release_name: Release v1.0.0  # Specify your release name here
          body: Release notes for version 1.0.0  # Specify your release notes here
          draft: false
          prerelease: false

            - name: Run a multi-line script
        run: |
          ls -la
          cd sample
          ls -la
          cd target
          ls -la    

      - name: Upload Package
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /sample/target/*.jar    # Specify the path to your package here
          asset_name: test_name  # Specify the name of your package here
          asset_content_type: application/java-archive
